stages:
  - build
  - test
  - deploy

variables:
  PYTHON_VER: "3.6"
  ROBO_GYM_IMAGE: $CI_REGISTRY_IMAGE:$PYTHON_VER-$CI_COMMIT_SHA
  ROBOT_SERVERS_IMAGE: "$CI_REGISTRY/robo-gym/robot-servers/develop:latest"  

before_script:
  # docker login asks for the password to be passed through stdin for security
  # we use $CI_JOB_TOKEN here which is a special token provided by GitLab
  - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY

.build_robo-gym_image: &build_robo-gym_image_def
  image: docker:18.09
  services:
    - docker:18.09-dind
  tags:
    - docker-executor
  stage: build
  retry:
    max: 2
  script:
    # fetch the latest image (not failing if image is not found)
    - docker pull $CI_REGISTRY_IMAGE:$PYTHON_VER-latest || true
    - >
      docker build
      --pull
      --cache-from $CI_REGISTRY_IMAGE:$PYTHON_VER-latest
      --tag $ROBO_GYM_IMAGE
      --build-arg PYTHON_VER=$PYTHON_VER
      --build-arg CACHEBUST=$CI_COMMIT_SHA
      .
    - docker push $ROBO_GYM_IMAGE
    - docker tag $ROBO_GYM_IMAGE $CI_REGISTRY_IMAGE:$PYTHON_VER-latest
    - docker push $CI_REGISTRY_IMAGE:$PYTHON_VER-latest

build_robo-gym_image_py36:
  <<: *build_robo-gym_image_def  

build_robo-gym_image_py37:
  <<: *build_robo-gym_image_def
  variables:
      PYTHON_VER: "3.7"
  only:
    - schedules

build_robo-gym_image_py38:
  <<: *build_robo-gym_image_def
  variables:
      PYTHON_VER: "3.8"
  only:
    - schedules
build_robo-gym_image_py39:
  <<: *build_robo-gym_image_def
  variables:
      PYTHON_VER: "3.9"
  only:
    - schedules

.short_test_environments: &short_test_environments_def
  image: docker:18.09
  before_script:
  - apk add docker-compose
  services:
    - docker:18.09-dind
  tags:
    - docker-executor
  stage: test
  script:
    - echo "Python Version:$PYTHON_VER Robot Servers image:$ROBOT_SERVERS_IMAGE"  
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull $ROBO_GYM_IMAGE
    - docker tag $ROBO_GYM_IMAGE robo-gym
    - docker pull $ROBOT_SERVERS_IMAGE
    - docker tag $ROBOT_SERVERS_IMAGE robot-servers
    - docker-compose -f docker-compose-test-melodic.yml up -d
    - docker exec robo-gym pytest -m "not nightly"
    - docker-compose -f docker-compose-test-melodic.yml down
  except:
    - schedules

short_test_environments:
  <<: *short_test_environments_def

short_test_environments_with_rs_manual_deploy:
  <<: *short_test_environments_def
  variables:
      ROBOT_SERVERS_IMAGE: "$CI_REGISTRY/robo-gym/robot-servers/manual_deploy:latest"
  when: manual

.full_test_environments: &full_test_environments_def
  image: docker:18.09
  before_script:
  - apk add docker-compose
  services:
    - docker:18.09-dind
  tags:
    - docker-executor
  stage: test
  script:
    - echo "Python Version:$PYTHON_VER Robot Servers image:$ROBOT_SERVERS_IMAGE"  
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull $ROBO_GYM_IMAGE
    - docker tag $ROBO_GYM_IMAGE robo-gym
    - docker pull $ROBOT_SERVERS_IMAGE
    - docker tag $ROBOT_SERVERS_IMAGE robot-servers
    - docker-compose -f docker-compose-test-melodic.yml up -d
    - docker exec robo-gym pytest
    - docker-compose -f docker-compose-test-melodic.yml down

manual_full_test_environments_py36:
  <<: *full_test_environments_def
  when: manual
  needs: ["build_robo-gym_image_py36"]

full_test_environments_py36:
  <<: *full_test_environments_def
  only:
    - schedules
  needs: ["build_robo-gym_image_py36"]

full_test_environments_py37:
  <<: *full_test_environments_def
  variables:
      PYTHON_VER: "3.7"
  only:
    - schedules
  needs: ["build_robo-gym_image_py37"]

full_test_environments_py38:
  <<: *full_test_environments_def
  variables:
      PYTHON_VER: "3.8"
  only:
    - schedules
  needs: ["build_robo-gym_image_py38"]

full_test_environments_py39:
  <<: *full_test_environments_def
  variables:
      PYTHON_VER: "3.9"
  only:
    - schedules
  needs: ["build_robo-gym_image_py39"]

full_test_environments_py36_with_rs_master:
  <<: *full_test_environments_def
  variables:
      PYTHON_VER: "3.6"
      ROBOT_SERVERS_IMAGE: "$CI_REGISTRY/robo-gym/robot-servers/master:latest"
  only:
    - master
  
full_test_environments_py36_with_rs_manual_deploy:
  <<: *full_test_environments_def
  variables:
      PYTHON_VER: "3.6"
      ROBOT_SERVERS_IMAGE: "$CI_REGISTRY/robo-gym/robot-servers/manual_deploy:latest"
  when: manual

deploy_docker_image: 
  image: docker:18.09
  services:
    - docker:18.09-dind
  tags:
    - docker-executor
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull $ROBO_GYM_IMAGE
    - docker tag $ROBO_GYM_IMAGE $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest
  only:
    - master 
    - develop

deploy_production:
  image: python:3.6-slim-buster
  before_script:
     - pip3 install twine
     - python3 setup.py sdist
  stage: deploy
  variables:
    TWINE_USERNAME: $PYPI_USERNAME
    TWINE_PASSWORD: $PYPI_PASSWORD
  script:
    - twine upload --repository-url https://upload.pypi.org/legacy/ dist/*
  only:
    - /^v*$/
  except:
    - branches
    - triggers
